import pandas as pd 
import numpy as np 
import streamlit as st 
from streamlit_option_menu import option_menu 
import matplotlib.pyplot as plt 
import seaborn as sns 
import plotly.express as px 
import altair as alt 


st.set_page_config(page_title="Football Dashboard",page_icon='football',layout='wide')
st.title(':Yellow[ Stats Comparison between Messi and Ronaldo]')

with open('style.css') as f:
    st.markdown(f'<style>{f.read()}</style>',unsafe_allow_html=True)


df=pd.read_csv("C:\\Users\\AlfredRomarioG\\OneDrive - Cittabase Solutions Private Limited\\Desktop\\Project\\Football_new.csv")
df.head()


#df=df.drop(columns=['Matchday'])
df=df.drop(columns=['Goal_assist'])

df.info()
df.isnull().sum()

df['Type'].mode()
# df['Type'].value_counts()
df['Type']=df['Type'].fillna('Left-footed shot')

df['Playing_Position'].mode()
# df['Playing_Position'].value_counts()
df['Playing_Position']=df['Playing_Position'].fillna('CF')

# df['Date'] = pd.to_datetime(df.Date)
# df['Year']=df['Date'].dt.year
# df=df.drop(columns=['Date'])
df['Result']=df['Result'].map({'WON':1,'LOST':0})
df['Venue']=df['Venue'].map({'A':'Away','H':'Home'})
df.Result.value_counts()
# tee=int(df[(df["Result"] == 1)]["Result"].count())
df.rename(columns={'Type1':'Goals'},inplace=True)
df.rename(columns={'Competition_country':'Country'},inplace=True)

with st.sidebar:
    selected=option_menu(
        menu_title="Menu",
        options=["KPI and Tables","Charts"],
        icons=["table","bar-chart"],
        menu_icon="trophy",
        default_index=0,
        
        # orientation="horizontal"

    )

# top-level filters

player_filter = st.selectbox("Select Player", pd.unique(df['Player']))

if selected=="KPI and Tables":
 
 with st.sidebar:
    Match_filter = st.selectbox("Match Type", pd.unique(df['Matchday']))

# creating a single-element container
 placeholder = st.empty()

# dataframe filter
df = df[df["Player"] == player_filter]

df=df[df["Matchday"]== Match_filter]

with placeholder.container():
    col1, col2, col3 = st.columns(3)
    col1.metric(label="Home Games",
    value=int(df.Venue.value_counts()['Home']))
    col2.metric(label="Away Games",
    value=int(df.Venue.value_counts()['Away']))
    col3.metric(label="Goals Count",
    value=int(df.Goals.value_counts()[1]))
   
    kpi1,kpi2,kpi3=st.columns(3) 
    kpi1.metric(label="Home Game wins",
                value=df.query("Venue=='Home'")["Result"].sum())
    kpi2.metric(label="Away Game wins",
                value=df.query("Venue=='Away'")["Result"].sum())
    kpi3.metric(label="Lost Games",
                value=df.Result.value_counts()[0])    


    tb1,tb2,tb3=st.columns(3)
    with tb1:
      st.markdown("### Goals for Each Club")
      st.write(df.groupby("Club")["Goals"].sum())
    with tb2:
        st.markdown('### Goals in Each League')
        st.write(df.groupby("Competition")["Goals"].sum())
    with tb3:
        st.markdown('### Goals in Each Country')
        st.write(df.groupby("Country")["Goals"].sum())
       


if selected=="Charts":
   
   Match_filter = st.selectbox("Match Type", pd.unique(df['Matchday']))

#  player_filter = st.selectbox("Select Player", pd.unique(df['Player']))
   

# spaceholder = st.empty()

# #     # dataframe filter
# df=df[df["Player"] == player_filter]
# df=df[df["Matchday"]== Match_filter]

# with spaceholder.container():
   
#  fig1,fig2=st.columns(2)
#  with fig1:
#         st.markdown("### Second Chart")
#         fig1 = px.histogram(data_frame=df, x="Club")
#         st.write(fig1)